{"ast":null,"code":"!function (t, o) {\n  \"function\" == typeof define && define.amd ? define(o) : \"object\" == typeof exports ? module.exports = o() : t.tingle = o();\n}(this, function () {\n  var o = !1;\n\n  function t(t) {\n    this.opts = function () {\n      for (var t = 1; t < arguments.length; t++) for (var o in arguments[t]) arguments[t].hasOwnProperty(o) && (arguments[0][o] = arguments[t][o]);\n\n      return arguments[0];\n    }({}, {\n      onClose: null,\n      onOpen: null,\n      beforeOpen: null,\n      beforeClose: null,\n      stickyFooter: !1,\n      footer: !1,\n      cssClass: [],\n      closeLabel: \"Close\",\n      closeMethods: [\"overlay\", \"button\", \"escape\"]\n    }, t), this.init();\n  }\n\n  function e() {\n    this.modalBoxFooter && (this.modalBoxFooter.style.width = this.modalBox.clientWidth + \"px\", this.modalBoxFooter.style.left = this.modalBox.offsetLeft + \"px\");\n  }\n\n  return t.prototype.init = function () {\n    if (!this.modal) return function () {\n      this.modal = document.createElement(\"div\"), this.modal.classList.add(\"tingle-modal\"), 0 !== this.opts.closeMethods.length && -1 !== this.opts.closeMethods.indexOf(\"overlay\") || this.modal.classList.add(\"tingle-modal--noOverlayClose\");\n      this.modal.style.display = \"none\", this.opts.cssClass.forEach(function (t) {\n        \"string\" == typeof t && this.modal.classList.add(t);\n      }, this), -1 !== this.opts.closeMethods.indexOf(\"button\") && (this.modalCloseBtn = document.createElement(\"button\"), this.modalCloseBtn.type = \"button\", this.modalCloseBtn.classList.add(\"tingle-modal__close\"), this.modalCloseBtnIcon = document.createElement(\"span\"), this.modalCloseBtnIcon.classList.add(\"tingle-modal__closeIcon\"), this.modalCloseBtnIcon.innerHTML = '<svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M.3 9.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3L5 6.4l3.3 3.3c.2.2.5.3.7.3.2 0 .5-.1.7-.3.4-.4.4-1 0-1.4L6.4 5l3.3-3.3c.4-.4.4-1 0-1.4-.4-.4-1-.4-1.4 0L5 3.6 1.7.3C1.3-.1.7-.1.3.3c-.4.4-.4 1 0 1.4L3.6 5 .3 8.3c-.4.4-.4 1 0 1.4z\" fill=\"#000\" fill-rule=\"nonzero\"/></svg>', this.modalCloseBtnLabel = document.createElement(\"span\"), this.modalCloseBtnLabel.classList.add(\"tingle-modal__closeLabel\"), this.modalCloseBtnLabel.innerHTML = this.opts.closeLabel, this.modalCloseBtn.appendChild(this.modalCloseBtnIcon), this.modalCloseBtn.appendChild(this.modalCloseBtnLabel));\n      this.modalBox = document.createElement(\"div\"), this.modalBox.classList.add(\"tingle-modal-box\"), this.modalBoxContent = document.createElement(\"div\"), this.modalBoxContent.classList.add(\"tingle-modal-box__content\"), this.modalBox.appendChild(this.modalBoxContent), -1 !== this.opts.closeMethods.indexOf(\"button\") && this.modal.appendChild(this.modalCloseBtn);\n      this.modal.appendChild(this.modalBox);\n    }.call(this), function () {\n      this._events = {\n        clickCloseBtn: this.close.bind(this),\n        clickOverlay: function (t) {\n          var o = this.modal.offsetWidth - this.modal.clientWidth,\n              e = t.clientX >= this.modal.offsetWidth - 15,\n              s = this.modal.scrollHeight !== this.modal.offsetHeight;\n          if (\"MacIntel\" === navigator.platform && 0 == o && e && s) return;\n          -1 !== this.opts.closeMethods.indexOf(\"overlay\") && !function (t, o) {\n            for (; (t = t.parentElement) && !t.classList.contains(o););\n\n            return t;\n          }(t.target, \"tingle-modal\") && t.clientX < this.modal.clientWidth && this.close();\n        }.bind(this),\n        resize: this.checkOverflow.bind(this),\n        keyboardNav: function (t) {\n          -1 !== this.opts.closeMethods.indexOf(\"escape\") && 27 === t.which && this.isOpen() && this.close();\n        }.bind(this)\n      }, -1 !== this.opts.closeMethods.indexOf(\"button\") && this.modalCloseBtn.addEventListener(\"click\", this._events.clickCloseBtn);\n      this.modal.addEventListener(\"mousedown\", this._events.clickOverlay), window.addEventListener(\"resize\", this._events.resize), document.addEventListener(\"keydown\", this._events.keyboardNav);\n    }.call(this), document.body.appendChild(this.modal, document.body.firstChild), this.opts.footer && this.addFooter(), this;\n  }, t.prototype._busy = function (t) {\n    o = t;\n  }, t.prototype._isBusy = function () {\n    return o;\n  }, t.prototype.destroy = function () {\n    null !== this.modal && (this.isOpen() && this.close(!0), function () {\n      -1 !== this.opts.closeMethods.indexOf(\"button\") && this.modalCloseBtn.removeEventListener(\"click\", this._events.clickCloseBtn);\n      this.modal.removeEventListener(\"mousedown\", this._events.clickOverlay), window.removeEventListener(\"resize\", this._events.resize), document.removeEventListener(\"keydown\", this._events.keyboardNav);\n    }.call(this), this.modal.parentNode.removeChild(this.modal), this.modal = null);\n  }, t.prototype.isOpen = function () {\n    return !!this.modal.classList.contains(\"tingle-modal--visible\");\n  }, t.prototype.open = function () {\n    if (!this._isBusy()) {\n      this._busy(!0);\n\n      var t = this;\n      return \"function\" == typeof t.opts.beforeOpen && t.opts.beforeOpen(), this.modal.style.removeProperty ? this.modal.style.removeProperty(\"display\") : this.modal.style.removeAttribute(\"display\"), document.getSelection().removeAllRanges(), this._scrollPosition = window.pageYOffset, document.body.classList.add(\"tingle-enabled\"), document.body.style.top = -this._scrollPosition + \"px\", this.setStickyFooter(this.opts.stickyFooter), this.modal.classList.add(\"tingle-modal--visible\"), \"function\" == typeof t.opts.onOpen && t.opts.onOpen.call(t), t._busy(!1), this.checkOverflow(), this;\n    }\n  }, t.prototype.close = function (t) {\n    if (!this._isBusy()) {\n      if (this._busy(!0), !1, \"function\" == typeof this.opts.beforeClose) if (!this.opts.beforeClose.call(this)) return void this._busy(!1);\n      document.body.classList.remove(\"tingle-enabled\"), document.body.style.top = null, window.scrollTo({\n        top: this._scrollPosition,\n        behavior: \"instant\"\n      }), this.modal.classList.remove(\"tingle-modal--visible\");\n      var o = this;\n      o.modal.style.display = \"none\", \"function\" == typeof o.opts.onClose && o.opts.onClose.call(this), o._busy(!1);\n    }\n  }, t.prototype.setContent = function (t) {\n    return \"string\" == typeof t ? this.modalBoxContent.innerHTML = t : (this.modalBoxContent.innerHTML = \"\", this.modalBoxContent.appendChild(t)), this.isOpen() && this.checkOverflow(), this;\n  }, t.prototype.getContent = function () {\n    return this.modalBoxContent;\n  }, t.prototype.addFooter = function () {\n    return function () {\n      this.modalBoxFooter = document.createElement(\"div\"), this.modalBoxFooter.classList.add(\"tingle-modal-box__footer\"), this.modalBox.appendChild(this.modalBoxFooter);\n    }.call(this), this;\n  }, t.prototype.setFooterContent = function (t) {\n    return this.modalBoxFooter.innerHTML = t, this;\n  }, t.prototype.getFooterContent = function () {\n    return this.modalBoxFooter;\n  }, t.prototype.setStickyFooter = function (t) {\n    return this.isOverflow() || (t = !1), t ? this.modalBox.contains(this.modalBoxFooter) && (this.modalBox.removeChild(this.modalBoxFooter), this.modal.appendChild(this.modalBoxFooter), this.modalBoxFooter.classList.add(\"tingle-modal-box__footer--sticky\"), e.call(this), this.modalBoxContent.style[\"padding-bottom\"] = this.modalBoxFooter.clientHeight + 20 + \"px\") : this.modalBoxFooter && (this.modalBox.contains(this.modalBoxFooter) || (this.modal.removeChild(this.modalBoxFooter), this.modalBox.appendChild(this.modalBoxFooter), this.modalBoxFooter.style.width = \"auto\", this.modalBoxFooter.style.left = \"\", this.modalBoxContent.style[\"padding-bottom\"] = \"\", this.modalBoxFooter.classList.remove(\"tingle-modal-box__footer--sticky\"))), this;\n  }, t.prototype.addFooterBtn = function (t, o, e) {\n    var s = document.createElement(\"button\");\n    return s.innerHTML = t, s.addEventListener(\"click\", e), \"string\" == typeof o && o.length && o.split(\" \").forEach(function (t) {\n      s.classList.add(t);\n    }), this.modalBoxFooter.appendChild(s), s;\n  }, t.prototype.resize = function () {\n    console.warn(\"Resize is deprecated and will be removed in version 1.0\");\n  }, t.prototype.isOverflow = function () {\n    return window.innerHeight <= this.modalBox.clientHeight;\n  }, t.prototype.checkOverflow = function () {\n    this.modal.classList.contains(\"tingle-modal--visible\") && (this.isOverflow() ? this.modal.classList.add(\"tingle-modal--overflow\") : this.modal.classList.remove(\"tingle-modal--overflow\"), !this.isOverflow() && this.opts.stickyFooter ? this.setStickyFooter(!1) : this.isOverflow() && this.opts.stickyFooter && (e.call(this), this.setStickyFooter(!0)));\n  }, {\n    modal: t\n  };\n});","map":null,"metadata":{},"sourceType":"module"}